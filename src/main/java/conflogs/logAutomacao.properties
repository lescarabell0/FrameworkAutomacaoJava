#### Usando 2 appenders, 1 para logar no console, outro para um #arquivo, 
#### ou seja, mostrará o log no console e salvará em um arquivo
 
log4j.rootCategory=INFO,stdout,fileOut
 
# Imprime somente mensagens com 'priority' WARN ou mais alto para o #logger
#lembrando a ordem: DEBUG - INFO - WARN - ERROR - FATAL
log4j.category.logs=INFO
 
#### O primeiro appender escreve no console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
### Pattern que mostra o nome do arquivo e numero da linha, porem #sem data e hora
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n
 
#### O segundo appender escreve em um arquivo e faz um bkp ao #atingir o max 
log4j.appender.fileOut =org.apache.log4j.RollingFileAppender
log4j.appender.fileOut.File=logs/logautomacao.html
### Controla o tamanho maximo do arquivo
log4j.appender.fileOut.MaxFileSize=10MB
### Faz backup dos arquivos de log (apenas 1)
log4j.appender.fileOut.MaxBackupIndex=1
log4j.appender.fileOut.layout=org.apache.log4j.HTMLLayout
#####este formato esta em ingles: 2011-04-24 e imprime o nro da #linha L
log4j.appender.fileOut.layout.ConversionPattern=%d [%t] %5p %c:%L - %m%n
####imprime no formato dia/mes/ano 
log4j.appender.fileOut.layout.ConversionPattern=%-2d{dd/MM/yy HH:mm} [%t] %5p %c:%L - %m%n


#log4j.category.br.com.brq.log4j.rest.api=DEBUG, CONSOLE, ARQUIVO_LOGS_REST, file
#Appender de console
#log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
#log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
#log4j.appender.CONSOLE.layout.ConversionPattern=[%d{dd/MM/yy HH:mm:ss:SSS}] %m%n

#Appender do arquivo de log rest api
#log4j.appender.ARQUIVO_LOGS_REST=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.ARQUIVO_LOGS_REST.File=logss/rest_api.log
#log4j.appender.ARQUIVO_LOGS_REST.DatePattern='-'yyyyMMdd
#log4j.appender.ARQUIVO_LOGS_REST.layout=org.apache.log4j.PatternLayout
#log4j.appender.ARQUIVO_LOGS_REST.layout.ConversionPattern=[%d{dd/MM/yy HH:mm:ss:SSS}] %m%n